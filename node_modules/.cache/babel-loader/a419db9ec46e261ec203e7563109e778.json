{"ast":null,"code":"var _jsxFileName = \"/Users/stephengalvan/Flatiron/code/Mod4/AdditionalPractice/module-4-practice-todo-nyc01-seng-ft-062220/src/Components/Todo.js\";\nimport React from 'react';\nimport { CATEGORIES } from '../data';\nimport TaskContainer from '../Containers/TaskContainer';\nimport Categories from './Categories';\n\nclass Todo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        text: 'Buy rice',\n        category: 'Food'\n      }, {\n        text: 'Save a tenner',\n        category: 'Money'\n      }, {\n        text: 'Build a todo app',\n        category: 'Code'\n      }, {\n        text: 'Build todo API',\n        category: 'Code'\n      }, {\n        text: 'Get an ISA',\n        category: 'Money'\n      }, {\n        text: 'Cook rice',\n        category: 'Food'\n      }, {\n        text: 'Tidy house',\n        category: 'Misc'\n      }],\n      filteredTasks: [],\n      categories: CATEGORIES,\n      selected: \"All\"\n    };\n\n    this.filterTasks = () => {\n      if (this.state.selected === \"All\") {\n        return this.state.tasks;\n      } else {\n        return this.state.tasks.filter(task => task.c);\n      }\n    };\n\n    this.clickHandler = e => {\n      let button = e.target;\n      this.setState({\n        selected: button.innerText,\n        filteredTasks: []\n      });\n    };\n\n    this.addTaskHandler = task => {\n      console.log(task);\n      this.setState({\n        tasks: [...this.state.tasks, task]\n      });\n    };\n\n    this.doneHandler = task => {\n      console.log(task);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"My tasks\"), /*#__PURE__*/React.createElement(Categories, {\n      selected: this.state.selected,\n      categories: this.state.categories,\n      clickHandler: this.clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TaskContainer, {\n      taskHandler: this.addTaskHandler,\n      tasks: this.state.tasks,\n      selectedCategory: this.state.selected,\n      selectedTasks: this.state.filteredTasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/stephengalvan/Flatiron/code/Mod4/AdditionalPractice/module-4-practice-todo-nyc01-seng-ft-062220/src/Components/Todo.js"],"names":["React","CATEGORIES","TaskContainer","Categories","Todo","Component","state","tasks","text","category","filteredTasks","categories","selected","filterTasks","filter","task","c","clickHandler","e","button","target","setState","innerText","addTaskHandler","console","log","doneHandler","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { CATEGORIES } from '../data'\nimport TaskContainer from '../Containers/TaskContainer'\nimport Categories from './Categories'\n\n\nclass Todo extends React.Component {\n\n  state = {\n    tasks: [\n      {\n        text: 'Buy rice',\n        category: 'Food'\n      },\n      {\n        text: 'Save a tenner',\n        category: 'Money'\n      },\n      {\n        text: 'Build a todo app',\n        category: 'Code'\n      },\n      {\n        text: 'Build todo API',\n        category: 'Code'\n      },\n      {\n        text: 'Get an ISA',\n        category: 'Money'\n      },\n      {\n        text: 'Cook rice',\n        category: 'Food'\n      },\n      {\n        text: 'Tidy house',\n        category: 'Misc'\n      }\n    ], \n    filteredTasks: [],\n    categories: CATEGORIES, \n    selected: \"All\"\n  }\n\n  filterTasks = () => {\n    if(this.state.selected === \"All\"){\n      return this.state.tasks\n    } else {\n      return this.state.tasks.filter(task => task.c)\n    }\n  }\n\n  clickHandler = (e) => {\n    let button = e.target\n    this.setState({\n      selected: button.innerText,\n      filteredTasks: []\n    })\n  }\n\n  addTaskHandler = (task) => {\n    console.log(task)\n    this.setState({\n      tasks: [...this.state.tasks, task]\n    })\n  }\n\n  doneHandler = (task) => {\n    console.log(task)\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"App\">\n        <h2>My tasks</h2>\n        <Categories selected={this.state.selected} categories={this.state.categories} clickHandler={this.clickHandler}/>\n        <TaskContainer taskHandler={this.addTaskHandler} tasks={this.state.tasks} selectedCategory={this.state.selected} selectedTasks={this.state.filteredTasks} />\n      </div>\n    );\n  }\n}\n\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}